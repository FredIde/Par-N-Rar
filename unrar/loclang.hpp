#define   MYesNo             "_Yes_No"
#define   MYesNoAll          "_Yes_No_All"
#define   MYesNoAllRenQ      "_Yes_No_All_nEver_Rename_Quit"
#define   MContinueQuit      "_Continue_Quit"
#define   MRetryAbort        "_Retry_Abort"
#define   MCopyright         "RAR %s   Copyright (c) 1993-%d Alexander Roshal   %d %s %d"
#define   MRegTo             "Registered to %s"
#define   MShare             "Shareware version         Type RAR -? for help"
#define   MUCopyright        "UNRAR %s freeware      Copyright (c) 1993-%d Alexander Roshal"
#define   MBeta              "beta"
#define   MMonthJan          "Jan"
#define   MMonthFeb          "Feb"
#define   MMonthMar          "Mar"
#define   MMonthApr          "Apr"
#define   MMonthMay          "May"
#define   MMonthJun          "Jun"
#define   MMonthJul          "Jul"
#define   MMonthAug          "Aug"
#define   MMonthSep          "Sep"
#define   MMonthOct          "Oct"
#define   MMonthNov          "Nov"
#define   MMonthDec          "Dec"
#define   MRARTitle1         "Usage:     rar <command> -<switch 1> -<switch N> <archive> <files...>"
#define   MUNRARTitle1       "Usage:     unrar <command> -<switch 1> -<switch N> <archive> <files...>"
#define   MRARTitle2         "               <@listfiles...> <path_to_extract\\>"
#define   MCHelpCmd          "<Commands>"
#define   MCHelpCmdA         "  a             Add files to archive"
#define   MCHelpCmdC         "  c             Add archive comment"
#define   MCHelpCmdCF        "  cf            Add files comment"
#define   MCHelpCmdCW        "  cw            Write archive comment to file"
#define   MCHelpCmdD         "  d             Delete files from archive"
#define   MCHelpCmdE         "  e             Extract files to current directory"
#define   MCHelpCmdF         "  f             Freshen files in archive"
#define   MCHelpCmdI         "  i[par]=<str>  Find string in archives"
#define   MCHelpCmdK         "  k             Lock archive"
#define   MCHelpCmdL         "  l[t,b]        List archive [technical, bare]"
#define   MCHelpCmdM         "  m[f]          Move to archive [files only]"
#define   MCHelpCmdP         "  p             Print file to stdout"
#define   MCHelpCmdR         "  r             Repair archive"
#define   MCHelpCmdRC        "  rc            Reconstruct missing volumes"
#define   MCHelpCmdRN        "  rn            Rename archived files"
#define   MCHelpCmdRR        "  rr[N]         Add data recovery record"
#define   MCHelpCmdRV        "  rv[N]         Create recovery volumes"
#define   MCHelpCmdS         "  s[name|-]     Convert archive to or from SFX"
#define   MCHelpCmdT         "  t             Test archive files"
#define   MCHelpCmdU         "  u             Update files in archive"
#define   MCHelpCmdV         "  v[t,b]        Verbosely list archive [technical,bare]"
#define   MCHelpCmdX         "  x             Extract files with full path"
#define   MCHelpSw           "<Switches>"
#define   MCHelpSwm          "  -             Stop switches scanning"
#define   MCHelpSwAC         "  ac            Clear Archive attribute after compression or extraction"
#define   MCHelpSwAD         "  ad            Append archive name to destination path"
#define   MCHelpSwAG         "  ag[format]    Generate archive name using the current date"
#define   MCHelpSwAO         "  ao            Add files with Archive attribute set"
#define   MCHelpSwAP         "  ap<path>      Set path inside archive"
#define   MCHelpSwAS         "  as            Synchronize archive contents"
#define   MCHelpSwAV         "  av            Put authenticity verification (registered versions only)"
#define   MCHelpSwAVm        "  av-           Disable authenticity verification check"
#define   MCHelpSwCm         "  c-            Disable comments show"
#define   MCHelpSwCFGm       "  cfg-          Disable read configuration"
#define   MCHelpSwCL         "  cl            Convert names to lower case"
#define   MCHelpSwCU         "  cu            Convert names to upper case"
#define   MCHelpSwDF         "  df            Delete files after archiving"
#define   MCHelpSwDH         "  dh            Open shared files"
#define   MCHelpSwDS         "  ds            Disable name sort for solid archive"
#define   MCHelpSwEa         "  e<attr>       Set file exclude attributes"
#define   MCHelpSwED         "  ed            Do not add empty directories"
#define   MCHelpSwEE         "  ee            Do not save and extract extended attributes"
#define   MCHelpSwEN         "  en            Do not put 'end of archive' block"
#define   MCHelpSwEP         "  ep            Exclude paths from names"
#define   MCHelpSwEP1        "  ep1           Exclude base directory from names"
#define   MCHelpSwEP2        "  ep2           Expand paths to full"
#define   MCHelpSwEP3        "  ep3           Expand paths to full including the drive letter"
#define   MCHelpSwF          "  f             Freshen files"
#define   MCHelpSwHP         "  hp[password]  Encrypt both file data and headers"
#define   MCHelpSwIDP        "  idp           Disable percentage display"
#define   MCHelpSwIEML       "  ieml[addr]    Send archive by email"
#define   MCHelpSwIERR       "  ierr          Send all messages to stderr"
#define   MCHelpSwILOG       "  ilog[name]    Log errors to file (registered versions only)"
#define   MCHelpSwINUL       "  inul          Disable all messages"
#define   MCHelpSwIOFF       "  ioff          Turn PC off after completing an operation"
#define   MCHelpSwISND       "  isnd          Enable sound"
#define   MCHelpSwK          "  k             Lock archive"
#define   MCHelpSwKB         "  kb            Keep broken extracted files"
#define   MCHelpSwMn         "  m<0..5>       Set compression level (0-store...3-default...5-maximal)"
#define   MCHelpSwMC         "  mc<par>       Set advanced compression parameters"
#define   MCHelpSwMD         "  md<size>      Dictionary size in KB (64,128,256,512,1024,2048,4096 or A-G)"
#define   MCHelpSwMS         "  ms[ext;ext]   Specify file types to store"
#define   MCHelpSwOp         "  o+            Overwrite existing files"
#define   MCHelpSwOm         "  o-            Do not overwrite existing files"
#define   MCHelpSwOC         "  oc            Set NTFS Compressed attribute"
#define   MCHelpSwOL         "  ol            Save symbolic links as the link instead of the file"
#define   MCHelpSwOS         "  os            Save NTFS streams"
#define   MCHelpSwOW         "  ow            Save or restore file owner and group"
#define   MCHelpSwP          "  p[password]   Set password"
#define   MCHelpSwPm         "  p-            Do not query password"
#define   MCHelpSwR          "  r             Recurse subdirectories"
#define   MCHelpSwR0         "  r0            Recurse subdirectories for wildcard names only"
#define   MCHelpSwRI         "  ri<P>[:<S>]   Set priority (0-default,1-min..15-max) and sleep time in ms"
#define   MCHelpSwRR         "  rr[N]         Add data recovery record"
#define   MCHelpSwRV         "  rv[N]         Create recovery volumes"
#define   MCHelpSwS          "  s[<N>,v[-],e] Create solid archive"
#define   MCHelpSwSm         "  s-            Disable solid archiving"
#define   MCHelpSwSFX        "  sfx[name]     Create SFX archive"
#define   MCHelpSwSI         "  si[name]      Read data from standard input (stdin)"
#define   MCHelpSwT          "  t             Test files after archiving"
#define   MCHelpSwTK         "  tk            Keep original archive time"
#define   MCHelpSwTL         "  tl            Set archive time to latest file"
#define   MCHelpSwTN         "  tn<time>      Process files newer than <time>"
#define   MCHelpSwTO         "  to<time>      Process files older than <time>"
#define   MCHelpSwTA         "  ta<date>      Process files modified after <date> in YYYYMMDDHHMMSS format"
#define   MCHelpSwTB         "  tb<date>      Process files modified before <date> in YYYYMMDDHHMMSS format"
#define   MCHelpSwTS         "  ts<m,c,a>[N]  Save or restore file time (modification, creation, access)"
#define   MCHelpSwU          "  u             Update files"
#define   MCHelpSwV          "  v             Create volumes with size autodetection or list all volumes"
#define   MCHelpSwVUnr       "  v             List all volumes"
#define   MCHelpSwVn         "  v<size>[k,b]  Create volumes with size=<size>*1000 [*1024, *1]"
#define   MCHelpSwVD         "  vd            Erase disk contents before creating volume"
#define   MCHelpSwVER        "  ver[n]        File version control"
#define   MCHelpSwVN         "  vn            Use the old style volume naming scheme"
#define   MCHelpSwVP         "  vp            Pause before each volume"
#define   MCHelpSwW          "  w<path>       Assign work directory"
#define   MCHelpSwX          "  x<file>       Exclude specified file"
#define   MCHelpSwXa         "  x@            Read file names to exclude from stdin"
#define   MCHelpSwXal        "  x@<list>      Exclude files in specified list file"
#define   MCHelpSwY          "  y             Assume Yes on all queries"
#define   MCHelpSwZ          "  z<file>       Read archive comment from file"
#define   MBadArc            "ERROR: Bad archive %s"
#define   MAskPsw            "Enter password (will not be echoed)"
#define   MAskPswEcho        "Enter password"
#define   MReAskPsw          "Reenter password: "
#define   MFor               " for "
#define   MNotMatchPsw       "ERROR: Passwords do not match"
#define   MErrWrite          "Write error in the file %s"
#define   MErrRead           "Read error in the file %s"
#define   MErrSeek           "Seek error in the file %s"
#define   MErrFClose         "Cannot close the file %s"
#define   MErrOutMem         "Not enough memory"
#define   MErrBrokenArc      "Corrupt archive - use 'Repair' command"
#define   MProgAborted       "Program aborted"
#define   MErrRename         "Cannot rename %s to %s"
#define   MAbsNextVol        "Cannot find volume %s"
#define   MBreak             "User break"
#define   MAskCreatVol       "Create next volume ?"
#define   MAskNextDisk       "Disk full. Insert next"
#define   MCreatVol          "Creating %sarchive %s"
#define   MAskNextVol        "Insert disk with %s"
#define   MTestVol           "Testing archive %s"
#define   MExtrVol           "Extracting from %s"
#define   MConverting        "Converting %s"
#define   MCvtToSFX          "Convert archives to SFX"
#define   MCvtFromSFX        "Removing SFX module"
#define   MNotSFX            "%s is not SFX archive"
#define   MNotRAR            "%s is not RAR archive"
#define   MNotFirstVol       "%s is not the first volume"
#define   MCvtOldFormat      "%s - cannot convert to SFX archive with old format"
#define   MCannotCreate      "Cannot create %s"
#define   MCannotOpen        "Cannot open %s"
#define   MUnknownMeth       "Unknown method in %s"
#define   MVerRequired       "You need RAR %d.%d to unpack it"
#define   MOk                "Done"
#define   MDone              "Done"
#define   MLockingArc        "Locking archive"
#define   MNotMdfOld         "ERROR: Cannot modify old format archive"
#define   MNotMdfLock        "ERROR: Locked archive"
#define   MNotMdfVol         "ERROR: Cannot modify volume"
#define   MVerifyAV          "Verifying authenticity information ... "
#define   MFailedAV          " Failed"
#define   MStrAV1            "Archive %s"
#define   MStrAV2            "created at %s"
#define   MStrAV3            "by %s"
#define   MLogFailedAV       "Invalid authenticity information"
#define   MAddingAV          "Adding authenticity verification "
#define   MAVOldStyle        "Old style authenticity information"
#define   MPackAskReg        "Evaluation copy. Please register."
#define   MCreateArchive     "Creating %sarchive %s"
#define   MUpdateArchive     "Updating %sarchive %s"
#define   MAddSolid          "solid "
#define   MAddFile           "Adding    %-58s     "
#define   MUpdFile           "Updating  %-58s     "
#define   MAddPoints         "...       %-58s     "
#define   MCannotUpdPswSolid "ERROR: Cannot update solid archives with password"
#define   MMoveDelFiles      "Deleting files %s..."
#define   MMoveDelDirs       "and directories"
#define   MMoveDelFile       "Deleting %-30s"
#define   MMoveDeleted       "    deleted"
#define   MMoveNotDeleted    "    NOT DELETED"
#define   MClearAttrib       "Clearing attributes..."
#define   MMoveDelDir        "Deleting directory %-30s"
#define   MWarErrFOpen       "WARNING: Cannot open %d %s"
#define   MErrOpenFiles      "files"
#define   MErrOpenFile       "file"
#define   MAddNoFiles        "WARNING: No files"
#define   MMdfEncrSol        "%s: encrypted"
#define   MCannotMdfEncrSol  "Cannot modify solid archive containing encrypted files"
#define   MAddAnalyze        "Analyzing archived files: "
#define   MRepacking         "Repacking archived files: "
#define   MCRCFailed         "%-20s - CRC failed"
#define   MExtrTest          "Testing archive %s"
#define   MExtracting        "Extracting from %s"
#define   MUseCurPsw         "%s - use current password ?"
#define   MCreatDir          "Creating    %-56s"
#define   MExtrSkipFile      "Skipping    %-56s"
#define   MExtrTestFile      "Testing     %-56s"
#define   MExtrFile          "Extracting  %-56s"
#define   MExtrPoints        "...         %-56s"
#define   MExtrErrMkDir      "Cannot create directory %s"
#define   MExtrPrinting      "------ Printing %s"
#define   MEncrBadCRC        "Encrypted file:  CRC failed in %s (password incorrect ?)"
#define   MExtrNoFiles       "No files to extract"
#define   MExtrAllOk         "All OK"
#define   MExtrTotalErr      "Total errors: %ld"
#define   MFileExists        "%s already exists. Overwrite it ?"
#define   MAskOverwrite      "Overwrite %s ?"
#define   MAskNewName        "Enter new name: "
#define   MLogMainHead       "The archive header is corrupt"
#define   MLogFileHead       "%s - the file header is corrupt"
#define   MLogCommHead       "The comment header is corrupt"
#define   MLogProtectHead    "The data recovery header is corrupt"
#define   MReadStdinCmt      "Reading comment from stdin"
#define   MReadCommFrom      "Reading comment from %s"
#define   MDelComment        "Deleting comment from %s"
#define   MAddComment        "Adding comment to %s"
#define   MFCommAdd          "Adding file comments"
#define   MAskFComm          "Reading comment for %s : %s from stdin"
#define   MLogCommBrk        "The archive comment is corrupt"
#define   MCommAskCont       "Press 'Enter' to continue or 'Q' to quit:"
#define   MLogBrokFCmt       "The file comment is corrupt"
#define   MAbsDestName       "Destination file name required"
#define   MWriteCommTo       "Write comment to %s"
#define   MCommNotPres       "Comment is not present"
#define   MDelFrom           "Deleting from %s"
#define   MDeleting          "Deleting %s"
#define   MEraseArc          "Erasing empty archive %s"
#define   MNoDelFiles        "No files to delete"
#define   MLogTitle          "--------  %2d %s %d, archive %s"
#define   MPathTooLong       "ERROR: Path too long"
#define   MListSolid         "Solid "
#define   MListSFX           "SFX "
#define   MListVol1          "volume"
#define   MListVol2          "Volume"
#define   MListArc1          "archive"
#define   MListArc2          "Archive"
#define   MListRecRec        "Recovery record is present"
#define   MListLock          "Lock is present"
#define   MListPathComm      "Pathname/Comment            "
#define   MListName          " Name       "
#define   MListTitle         "      Size   Packed Ratio  Date   Time     Attr      CRC   Meth Ver"
#define   MListTechTitle     "               Host OS    Solid   Old"
#define   MListEAHead        "   OS/2 extended attributes"
#define   MListUOHead        "   Unix Owner/Group data:    %-14s %-14s"
#define   MListBeEAHead      "   BeOS extended attributes"
#define   MListNTACLHead     "   NTFS security data"
#define   MListStrmHead      "   NTFS stream: %s"
#define   MListUnkHead       "   Unknown subheader type: 0x%04x"
#define   MFileComment       "Comment: "
#define   MYes               "Yes"
#define   MNo                "No"
#define   MListNoFiles       "  0 files"
#define   MRprReconstr       "Reconstructing %s"
#define   MRprBuild          "Building %s"
#define   MRprOldFormat      "Cannot repair archive with old format"
#define   MRprFind           "Found  %s"
#define   MRprAskIsSol       "The archive header is corrupt. Mark archive as solid ?"
#define   MRprNoFiles        "No files found"
#define   MRprSuspEntry      "Suspicious entry %s"
#define   MRprDir            "Directory"
#define   MRprSuspSize       "Size %ld  Packed %ld"
#define   MRprSuspAdd        "Add it to archive ?"
#define   MLogUnexpEOF       "Unexpected end of archive"
#define   MRepAskReconst     "Reconstruct archive structure ?"
#define   MRecScanning       "Scanning..."
#define   MRecRNotFound      "Data recovery record not found"
#define   MRecRFound         "Data recovery record found"
#define   MRecSecDamage      "Sector %ld (offsets %lX...%lX) damaged"
#define   MRecCorrected      " - data recovered"
#define   MRecFailed         " - cannot recover data"
#define   MAddRecRec         "Adding data recovery record"
#define   MEraseForVolume    "Erasing contents of drive %c:"
#define   MGetOwnersError    "WARNING: Cannot get %s owner and group"
#define   MErrGetOwnerID     "WARNING: Cannot get owner %s ID"
#define   MErrGetGroupID     "WARNING: Cannot get group %s ID"
#define   MOwnersBroken      "ERROR: %s group and owner data are corrupt"
#define   MSetOwnersError    "WARNING: Cannot set %s owner and group"
#define   MErrLnkRead        "WARNING: Cannot read symbolic link %s"
#define   MErrCreateLnk      "WARNING: Cannot create link %s"
#define   MSymLinkExists     "WARNING: Symbolic link %s already exists"
#define   MAskRetryCreate    "Cannot create %s. Retry ?"
#define   MListMACHead1      " MacOS file type:  %c%c%c%c  ; "
#define   MListMACHead2      "file creator:  %c%c%c%c"
#define   MDataBadCRC        "%-20s : packed data CRC failed in volume %s"
#define   MFileRO            "%s is read-only"
#define   MACLGetError       "WARNING: Cannot get %s security data"
#define   MACLSetError       "WARNING: Cannot set %s security data"
#define   MACLBroken         "ERROR: %s security data are corrupt"
#define   MACLUnknown        "WARNING: Unknown format of %s security data"
#define   MStreamBroken      "ERROR: %s stream data are corrupt"
#define   MStreamUnknown     "WARNING: Unknown format of %s stream data"
#define   MInvalidName       "ERROR: Invalid file name %s"
#define   MEABroken          "ERROR: %s extended attributes are corrupt"
#define   MEAUnknHeader      "WARNING: %s - unknown format of extended attributes"
#define   MCannotSetEA       "WARNING: cannot set extended attributes to %s"
#define   MCannotGetEA       "ERROR: Cannot get extended attributes of %s"
#define   MShowEA            " (+EA)"
#define   MSkipEA            "...skipping extended attributes"
#define   MProcessArc        "Processing archive %s"
#define   MSyncScanError     "File search errors, cannot synchronize archive"
#define   MCorrectingName    "WARNING: Attempting to correct the invalid file name"
#define   MUnpCannotMerge    "WARNING: You need to start extraction from a previous volume to unpack %s"
#define   MUnknownOption     "ERROR: Unknown option: %s"
#define   MSubHeadCorrupt    "ERROR: Corrupt data header found, ignored"
#define   MSubHeadUnknown    "WARNING: Unknown data header format, ignored"
#define   MSubHeadDataCRC    "ERROR: Corrupt %s data block"
#define   MSubHeadType       "Data header type: %s"
#define   MScanError         "Cannot read contents of %s"
#define   MNotVolume         "%s is not volume"
#define   MRecVolDiffSets    "ERROR: %s and %s belong to different sets"
#define   MRecVolMissing     "%d volumes missing"
#define   MRecVolFound       "%d recovery volumes found"
#define   MRecVolAllExist    "Nothing to reconstruct"
#define   MRecVolCannotFix   "Reconstruction impossible"
#define   MReconstructing    "Reconstructing..."
#define   MCreating          "Creating %s"
#define   MRenaming          "Renaming %s to %s"
#define   MNTFSRequired      "Write error: only NTFS file system supports files larger than 4 GB"
#define   MErrChangeAttr     "WARNING: Cannot change attributes of %s"
#define   MWrongSFXVer       "ERROR: default SFX module does not support RAR %d.%d archives"
#define   MCannotEncName     "Cannot encrypt archive already contained encrypted files"
#define   MCannotEmail       "Cannot email the file %s"
#define   MCopyrightS        "RAR SFX archive" 
#define   MSHelpCmd          "<Commands>" 
#define   MSHelpCmdE         "  -x      Extract from archive (default)" 
#define   MSHelpCmdT         "  -t      Test archive files" 
#define   MSHelpCmdV         "  -v      Verbosely list contents of archive" 
#define   MMaxPathLimit      "Total path and file name length must not exceed %d characters"
#define   MRecVolLimit       "Total number of usual and recovery volumes must not exceed 255"
#define   MVolumeNumber      "volume %d"
